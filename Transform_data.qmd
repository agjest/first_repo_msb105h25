---
title: "Transform Data"
format: html
---

```{r}
#| label: setup
library(tidyverse)
library(nycflights13)
options(
  paged.print = FALSE,
  digits=6
  )
```

```{r}
1/3
```


```{r}
set.seed(1234)
res_mean_rnorm_3dig_string <- 
  rnorm(n = 10, mean = 0, sd = 1) %>%
  mean() %>%
  round(digits = 3) %>% 
  # The dot '.' is to show where the content of the pipe should be put
  paste("Result:", .)
res_mean_rnorm_3dig_string
```

```{r}
flights %>% dim()
```

```{r}
#| paged.print: false
flights %>% as_tibble()
```

```{r}
#| paged.print: false
print(
  filter(flights, month == 1, day == 1),
  n = 5, 
  width = 70
  )
```

```{r}
#| paged.print: false
flights |> 
  filter(month == 1, day == 1) |> 
  print(n = 5)
```

```{r}
#| paged.print: false
flights |> 
filter(
  month == 1, 
  day %in% c(1, 15, 30)
  ) |> 
  print(
    n = 7,
    width = 60
  )
```

```{r}
#| paged.print: false
flights |> 
filter(
  month == 1, 
  day %in% c(1, 15, 30)
  ) |> 
  tail(n = 7) 
```

```{r}
#| paged.print: false
flights |> 
filter(
  month == 1, 
  day %in% c(1, 15, 30)
  ) |> 
  arrange(desc(day), desc(dep_time))
```


```{r}
#| paged.print: false
set.seed(42)
flights |> 
filter(month == 1, day %in% c(1, 15, 30)) |> 
  slice_sample(n = 10) |> 
  arrange(day, dep_time)
```

```{r}
2 < 1
```

```{r}
!(2L == 3L)
```

```{r}
near(50.50, 101/2)
```

```{r}
near(1/47 * 47, 47/47)
```

```{r}
!(TRUE & FALSE)
```

```{r}
near((1/49) * 49,  1)
```

```{r}
# and
(1/49) * 49 == 49/49
```

```{r}
(1/5) * 5 == 5/5
```

```{r}
near((1/49) * 49, 49/49)
```

```{r}
#| paged.print: false
  flights %>% 
  filter(month == 1, day %in% c(1, 15, 30)) %>% 
  slice_tail(n = 7) %>% 
  print(width = 70)
```

How many flights were there in April and September (total)?

```{r}
#| paged.print: false
library(nycflights13)
  flights |> 
  filter(month %in% c(4, 9))
```

How many flights were there in each of the months from April to September?

```{r}
#| paged.print: false
flights |> 
  filter(month %in% 4:9) |> 
    group_by(month) |> 
    summarise(antall = n())
```

How many flights were there in total the first two days of each month?

```{r}
#| eval: false
View(flights)
```


```{r}
#| paged.print: false
flights |> 
  filter(day %in% c(1,2)) |> 
    group_by(month, origin) |> 
    summarise(antall = n())
```

How many flights were there in total the first day of the months?

```{r}
#| paged.print: false
flights |> 
  filter(day %in% c(1)) |> 
  summarise(antall = n())
```

How many flights were there in total the first day of the months for each airport in NYC?

```{r}
#| paged.print: false
flights |> 
  filter(day %in% c(1)) |> 
  group_by(origin, month) |> 
  summarise(antall = n()) |> 
  print(n = 60)
```

How many flights wre there the last day of each month for each airport?

```{r}
#| paged.print: false
flights |> 
  group_by(month, origin) |> 
  filter(day == max(day)) |> 
    summarise(antall = n()) |> 
  print(n = 40)
```
Test

```{r}
#| paged.print: false
flights |> 
  filter(month == 8 & day == 31) |> 
  group_by(origin) |> 
    summarise(antall = n()) 
```


How may flights were there during 2013 that had an arrival delay greater than or equal to 15 min., but less than 30 min.?

```{r}
head(flights)
```

```{r}
#| paged.print: false
delays <- flights |> 
  filter(arr_delay >= 15 & arr_delay < 30) |> 
  group_by(origin) |> 
  count() |> 
  pull()

flights_orig <- flights |> 
  group_by(origin) |> 
  summarise(antall = n()) |> 
  pull()

round(100 * delays/flights_orig, 2)
```

```{r}
names(flights)
```


```{r}
flights |> 
  group_by(origin) |> 
  summarise(antall = n())
```

```{r}
flights |> 
  arrange(desc(month), desc(day), sched_dep_time, dep_time) |> 
  select(year:day, sched_dep_time, dep_time, everything()) |> 
  print(n = 10, width = 70)
```

```{r}
(my_vars <- select(flights, day, month, year, arr_delay))
```

```{r}
(my_vars <- flights |> 
   select(day, month, year, arr_delay) |> 
   rename(arrival_delay = arr_delay))
```

```{r}
(my_vars <- flights |> 
   select(day, month, year, arrival_delay = arr_delay)
 )
```

```{r}
(my_vars <- flights |> 
   filter(month == 5) |> 
   select(day, month, year, arrival_delay = arr_delay)
 )
```

```{r}
(my_vars <- flights |> 
   filter(month == 5) |> 
   select(day, month, year, arrival_delay = arr_delay)
 )
```

```{r}
median(my_vars$arrival_delay, na.rm = TRUE)
```

Hvor mange NA er det?

```{r}
sum(is.na(my_vars$arrival_delay))
```

```{r}
table(is.na(my_vars$arrival_delay))
```

Svar som tibble:

```{r}
(my_vars <- flights |> 
   filter(month == 5) |> 
   select(day, month, year, arrival_delay = arr_delay) |> 
   summarise(median_arr_delay = median(arrival_delay, na.rm = TRUE))
 )
```

Svar som vektor med ett element:

```{r}
(my_vars <- flights |> 
   filter(month == 5) |> 
   select(day, month, year, arrival_delay = arr_delay) |> 
   summarise(median_arr_delay = median(arrival_delay, na.rm = TRUE)) |> 
   pull()
 )
```

```{r}
(my_new_data <- flights %>%
  select(year:day, ends_with("delay"), distance, air_time) %>%
  mutate(
    gain = dep_delay - arr_delay,
    speed = (distance/air_time) * 60
    ) %>%
  select(year:day, gain, everything()) %>%
  arrange(desc(gain))
 )
```

```{r}
# note na.rm = TRUE, else everything will be NA 
# even if just one NA
flights %>%
  summarise(delay = median(arr_delay, na.rm = TRUE))
```

```{r}
names(flights)
```


```{r}
flights %>%
  filter(month %in% c(2, 9)) |> 
  group_by(month, carrier) |> 
  summarise(
    mean_delay = mean(arr_delay, na.rm = TRUE),
    sd_delay = sd(arr_delay, na.rm = TRUE)
    ) |> 
  print(n = 60)
```

