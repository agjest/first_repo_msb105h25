---
title: "intro ggplot"
format: html
# File must exist, but can be empty
# give following command in terminal before running:
# touch ag_test.bib
bibliography: ag_test.bib
# include all references in .bib file even if
# they are not cited.
nocite: '@*'
---

```{r}
#| label: setup
#| message: false
library(tidyverse)
library(ggpubr)
library(flextable)
library(gridExtra)
```



```{r}
gg1 <- ggplot(data = mtcars, mapping = aes(x = disp, y = mpg)) +
  geom_point()

gg1
```

```{r}
gg2 <-   ggplot(data = mtcars) +
  geom_point(mapping = aes(x = disp, y = mpg))

gg2
```

```{r}
ggarrange(gg1, gg2, labels = c("mapping = aes in ggplot", "mapping = aes in geom_*"),
          nrow = 1)
```

```{r}
#| warning: false
## combine aes
gg3 <- ggplot(
  data = mtcars,
  mapping = aes(
  x = disp, 
  colour= factor(cyl), 
  shape = factor(abs(am - 1)),
  size = carb
  )
  ) +
##  geom_point(data = mtcars, mapping = aes(y = mpg), col = 'blue')
  geom_point(data = mtcars, mapping = aes(y = mpg))
  
gg3
```

```{r}
#inherit.aes    = FALSE, overrides the default aesthetics, rather than combining with them.
gg4 <-   ggplot(data =  mtcars, mapping = aes(x = disp, colour = factor(cyl))) +
##  geom_point(data = mtcars, mapping = aes(y = mpg), colour = 'blue')
  geom_point(
    data = mtcars, 
    mapping = aes(
      x = qsec, 
      y = mpg
      ), 
    colour = "blue", 
    show.legend = TRUE, 
    inherit.aes = TRUE
    )

gg4
```

```{r}
ggplot() +
  geom_point(data = mtcars,
             mapping = aes(x = disp, y = mpg, colour = factor(cyl), size = 3.6*(0.25*1609.347)/qsec,
                           shape = factor(ifelse(am, "Man", "Aut"))), alpha = 0.6) +
  labs(colour = "cyl", size = "speed\n(km/h)", shape = "trans-\nmission")
```

```{r}
#| message: false
ggplot(
  mapping = aes(x = disp, y = mpg),
  data = mtcars
  ) +
  geom_point(
    mapping = aes(
      colour = factor(cyl), 
      size = 3.6*(0.25*1609.347)/qsec, 
      shape = factor(
        # Note codeing am
        # 0 automatic, 1 manual
        ifelse(
          am == 0, 
          "Aut", 
          "Man"
          )
        )
      )
    ) +
  labs(
    colour = "cyl", 
    size = "speed\n(km/h)", 
    shape = "trans-\nmission"
    ) +
  geom_smooth(method = "lm", se = FALSE, colour = "black", linewidth = 1.25) +
  geom_smooth(method = MASS::rlm, se = FALSE, colour = "red", linewidth = 1.25)
```

```{r}
df_mean <- mtcars |> 
  group_by(cyl) |> 
  summarise(
    mpg = mean(mpg),
    disp = mean(disp)
  ) |> 
  mutate(
    cyl = c("avg. car 4 cyl.", 
            "avg. car 6 cyl.", "avg. car 8 cyl.")
  )
```


```{r}
#| message: false
ggplot(
  data = mtcars, 
  mapping = aes(x = disp, y = mpg)
  ) +
  geom_point(
    mapping = aes(colour = factor(cyl))
    ) +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  geom_smooth(
    method = MASS::rlm, 
    colour = 'Red', 
    se = FALSE
    ) +
  geom_point(
    data = df_mean, 
    colour = "black", 
    size = 3
    ) +
  geom_text(
    data = df_mean, 
    mapping = aes(label = cyl), 
    colour = "black", 
    vjust = 1.5
    )
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(
    x = hp, 
    y = 1609.347/(2*qsec^2),
    colour = cut_number(
      wt, 
      n = 3)
    )
  ) +
  facet_wrap(~cut_number(wt, n =3)) +
  geom_point() +
  geom_smooth(
    method = "lm", 
    se = FALSE
    )
```

```{r}
#new dataframe to use for the grey points
hp_acc <- data.frame(
  hp = mtcars$hp, 
  acc = 1609.347/(2*mtcars$qsec^2)
  )

ggplot(
  data = mtcars, 
  mapping = aes(
    x = hp, 
    y = 1609.347/(2*qsec^2),
    colour = cut_number(
      wt, 
      n = 3, 
      labels = c("Light", "Medium", "Heavy")
      )
    )
  ) +
  geom_point(
    mapping = aes(
    x = hp, 
    y = 1609.347/(2*qsec^2)
    ),
    colour = "grey80",
    inherit.aes = FALSE
    ) +
  facet_wrap(
    ~cut_number(
      wt, 
      n =3 , 
      labels = c("Light", "Medium", "Heavy")
      )
    ) +
  geom_point() +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  labs(
    y = "Mean acceleration (m/s^2)", 
    colour = "Weight"
    )
```


```{r}
#| message: false
#new dataframe to use for the grey points
hp_acc <- data.frame(
  hp = mtcars$hp, 
  acc = 1609.347/(2*mtcars$qsec^2)
  )

#new dataframe to use for the grey points
hp_acc <- data.frame(
  hp = mtcars$hp, 
  acc = 1609.347/(2*mtcars$qsec^2)
  )

mtcars |> 
  arrange(cyl) |> 
  mutate(
    cyl = fct(as.character(cyl))
  ) |> 
ggplot(
  mapping = aes(x = hp, y = 1609.347/(2*qsec^2))
  ) +
  geom_point(
    data = hp_acc, 
    mapping = aes(x = hp, y = acc), colour = "grey80"
    ) +
  facet_wrap(
    ~cut_number(
      wt, 
      n =3 , 
      labels = c("Light", "Medium", "Heavy")
      )
    ) +
  geom_point(
    mapping = aes(colour = cut_number(
      wt, 
      n = 3, 
      labels = c("Light", "Medium", "Heavy")
      )
      ),
    show.legend = FALSE
    ) +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  labs(
    y = "Mean acceleration (m/s^2)", 
    colour = "Weight"
    )
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(x = hp, y = 1609.347/(2*qsec^2))
  ) +
  geom_point(
    data = hp_acc, 
    mapping = aes(x = hp, y = acc), 
    colour = "grey80"
    ) +
  facet_grid(
    factor(cyl)~cut_number(
      wt, 
      n =3 , 
      labels = c("Light", "Medium", "Heavy"))
    ) +
  geom_point(
    mapping = aes(
      colour = cut_number(
        wt, 
        n = 3, 
        labels = c("Light", "Medium", "Heavy")
        )
      ),
    show.legend = FALSE
    ) +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  labs(
    y = "Mean acceleration", 
    colour = "Weight"
    )
```


## Citing R and packages

```{r}
citation()
```

```{r}
citation("tidyverse")
```


```{r}
# create a bib file for the R packages
# used in this document
# Note! Needs to do a touch ag_functions.bib in terminal before first run
# else stops when bibliography: "ag_functions.bib" not found in YAML
knitr::write_bib(
  c(
    "tidyverse",
    "ggpubr"
    ),
  file = "ag_test.bib"
  )
```

## Report sessionInfo()


```{r}
#| eval: false
sI <- sessionInfo()
# The same, showing the RNGkind, but not the locale :
print(sI, RNG = TRUE, locale = FALSE)
```

```{r}
#| paged.print: false
sessioninfo::session_info(
  pkgs = "attached",
  info = "packages",
  dependencies = TRUE) |> 
_$packages |> 
as_tibble() |> 
select(package, version = loadedversion, source) |> 
as_flextable(
  max_row = 40,
  show_coltype = FALSE
  ) %>%
line_spacing(
space = 0.3
) |> 
delete_part("footer") %>%
theme_booktabs()
```



```{r}
#| paged.print: false
sessioninfo::session_info(
  pkgs = "attached",
  info = "packages",
  dependencies = TRUE) %>% 
.[[1]] |> 
select(package, loadedversion, date, source) |> 
as_tibble() %>% 
as_flextable(
  max_row = 40,
  show_coltype = FALSE
  ) %>%
line_spacing(
space = 0.3
) |> 
delete_part("footer") %>%
theme_booktabs()
```

```{r}
#| paged.print: false
sessioninfo::platform_info() |> 
as_tibble() %>% 
as_flextable(
  max_row = 40,
  show_coltype = FALSE
  ) %>%
line_spacing(
space = 0.3
) |> 
delete_part("footer") %>%
autofit() |> 
theme_booktabs()
```

```{r}
#| paged.print: false
sessioninfo::external_info() |> 
as_tibble() %>% 
as_flextable(
  max_row = 40,
  show_coltype = FALSE
  ) %>%
line_spacing(
space = 0.3
) |> 
line_spacing(
i = 16,
space = 0.8
) |> 
delete_part("footer") %>%
theme_booktabs()
```




