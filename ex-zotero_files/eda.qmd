---
title: "EDA"
format: html
editor: visual
---

```{r}
#| message: false
#| label: setup
library(tidyverse)
library(vtable)
library(flextable)
```

## EDA

```{r}
heights <- modelr::heights
```


```{r}
#| label: tbl-descStat
#| tbl-cap: Descriptive statistics for the heights dataset.
#| paged.print: false
# package vtable 
# must be installed
heights %>% 
  select(
    -marital, 
    -sex
    ) %>% 
  # . to stop RStudio 
  # complaining about 
  # no data
  vtable::st(data = ., out = "return") |> 
  as_flextable(
    show_coltype = FALSE,
    max_row = 20
  ) |> 
  line_spacing(space = 0.3) |>
  delete_part("footer") |>
  theme_booktabs()
```

As seen in @tbl-descStat bla bla


```{r}
#| paged.print: false
# NAs in my_heights?
heights %>% 
  apply(MARGIN = 2, FUN = is.na) %>% 
  apply(MARGIN = 2, FUN = sum) |> 
  print(width = 40)
```

```{r}
#| paged.print: false
# NAs in my_heights?
heights %>% 
  is.na() %>%
  apply(MARGIN = 2, FUN = sum)  |> 
  print(width = 40)
```

```{r}
#| paged.print: false
# package vtable 
# must be installed
heights <- modelr::heights

tab1 <- heights %>% 
  select(
    -marital, 
    -sex
    ) %>% 
  vtable::st(out = "return") |> 
  as_flextable(
    show_coltype = FALSE,
    max_rows = 20
  ) |> 
  line_spacing(space = 0.3) |> 
  autofit() |> 
  delete_part("footer") |> 
  theme_booktabs() |> 
  bg(i = 6, j = c(5,8), bg = "yellow")

tab1
```

```{r}
tab1 |> 
  bg(i = 3, j = c(2,4), bg = "red")
```

```{r}
heights %>% 
  select(
    -sex
  ) |> 
  vtable::st(out = "return") |> 
  as_flextable(
    show_coltype = FALSE,
    max_rows = 40
  ) |> 
  line_spacing(space = 0.3) |> 
  autofit() |> 
  delete_part("footer") |> 
  theme_booktabs() 
```


```{r}
# package vtable must 
# be installed
heights %>% 
  select(marital, sex) %>% 
  vtable::st(
    data = ., 
    out = "return"
    ) |> 
  as_flextable(
    show_coltype = FALSE,
    max_row = 20
  ) |> 
  line_spacing(space = 0.3) |> 
  delete_part("footer")
```

```{r}
#| paged.print: false
# Default for ft_max_row is 10
# so just first 10 lines will
# be printed
heights %>% 
  select(-sex) %>% 
  vtable::st(
    group = 'marital',
    group.long = TRUE,
    out = "return"
    )  |> 
  as_flextable(
    show_coltype = FALSE,
    max_row = 60
  ) |> 
  line_spacing(space = 0.3) |> 
  delete_part("footer") |> 
  theme_booktabs()
```

## Bruk av `ggplot()`

```{r}
ggplot(data = heights) +
  geom_bar(
    mapping = aes(
      x = education
      ), 
    na.rm = TRUE
    ) +
   theme(
     axis.text = element_text(
       size = 15
       ),
    axis.title = element_text(
       size = 15
       )
   )
```

```{r}
hist1 <- ggplotify::as.ggplot(~hist(heights$income, breaks = 20))
hist2 <- ggplot(data = heights, mapping = aes(x = income)) +
  geom_histogram(bins = 20)

gridExtra::grid.arrange(hist1, hist2, ncol = 2)
```

```{r}
hist3 <- ggplot(heights, mapping = aes(x = income)) +
  geom_histogram(bins = 40, na.rm = TRUE)
hist4 <- ggplot(heights, mapping = aes(x = height)) +
  geom_histogram(bins = 40, na.rm = TRUE)
hist5 <- ggplot(heights, mapping = aes(x = weight)) +
  geom_histogram(bins = 40, na.rm = TRUE)
gridExtra::grid.arrange(hist3, hist4, hist5, nrow = 1)
```

```{r}
hist6 <- ggplot(heights, mapping = aes(x = age)) +
  geom_histogram(bins = 40, na.rm = TRUE)
hist7 <- ggplot(heights, mapping = aes(x = education)) +
  geom_histogram(bins = 40, na.rm = TRUE)
hist8 <- ggplot(heights, mapping = aes(x = afqt)) +
  geom_histogram(bins = 40, na.rm = TRUE)
gridExtra::grid.arrange(hist6, hist7, hist8, nrow = 1)
```
```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(!is.na(edu_fac) & income > 0) %>%
  ggplot(mapping = aes(x = income, fill = edu_fac, colour = edu_fac)) +
  geom_density(alpha = 0.2, na.rm = TRUE) + 
  facet_wrap(~sex)
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(!is.na(edu_fac) & income > 0) %>%
  ggplot(mapping = aes(x = income, fill = sex, colour = sex)) +
  geom_density(alpha = 0.2, na.rm = TRUE) + 
  facet_wrap(~edu_fac)
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(!is.na(edu_fac) & income > 0) %>%
  ggplot(mapping = aes(x = income, fill = sex, colour = sex)) +
  geom_histogram(alpha = 0.7, na.rm = TRUE) + 
  facet_wrap(~edu_fac)
```


```{r}
heights %>% 
  filter(income < 1) %>%
  select(sex) %>%
  group_by(sex) %>%
  table() 
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  select(edu_fac) |> 
  group_by(edu_fac) %>%
  table()  
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income < 1) %>%
  select(sex, edu_fac) %>%
  group_by(sex) %>%
  table()
```


```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income < 1) %>%
  select(sex, edu_fac) %>%
  group_by(sex) %>%
  st()
```


```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income > 0) %>% 
  ggplot(mapping = aes(x = edu_fac, y = income)) +
  facet_wrap(~sex) + 
  geom_boxplot()
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income > 0) %>% 
  ggplot(mapping = aes(x = edu_fac, y = income)) +
  facet_wrap(~sex) + 
  geom_boxplot() + 
  coord_flip()
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income > 0 & !is.na(weight) & !is.na(afqt) & !is.na(edu_fac)) %>%
ggplot(mapping = aes(x = income, y = after_stat(density))) +
  geom_freqpoly(mapping = aes(colour = edu_fac), binwidth = 10000)
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income > 0 & !is.na(weight) & !is.na(afqt) & !is.na(edu_fac)) %>%
ggplot(mapping = aes(x = income, y = after_stat(density))) +
  geom_freqpoly(mapping = aes(colour = edu_fac), binwidth = 3000)
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income > 0 & !is.na(weight) & !is.na(afqt) & !is.na(edu_fac)) %>%
ggplot(mapping = aes(x = income, y = after_stat(density))) +
  geom_freqpoly(mapping = aes(colour = edu_fac), binwidth = 20000)
```

```{r}
heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(income > 0 & !is.na(weight) & !is.na(afqt) & !is.na(edu_fac)) %>%
  ggplot() +
  geom_count(mapping = aes(x = marital, y = edu_fac))
```

```{r}
heights %>% 
  filter(income > 0 & !is.na(weight) & !is.na(afqt) & !is.na(education)) %>%
  ggplot() +
  geom_point(mapping = aes(x = education, y = income), alpha = 0.05)
```

```{r}
diamonds %>% 
  ggplot(mapping = aes(x = carat, y = price)) +
  geom_point(size = 0.1, alpha = 0.05)
```


```{r}
diamonds %>% 
  filter(carat <= 2) %>% 
  ggplot(mapping = aes(x = carat, y = price)) +
  geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
```

